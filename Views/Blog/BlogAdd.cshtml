@using EntityLayer.Concrete
@model Blog

@{
    ViewData["Title"] = "BlogAdd";
    Layout = "~/Views/Shared/WriterLayout.cshtml";
}

<h1>Add New Blog</h1>

@using (Html.BeginForm("BlogAdd", "Blog", FormMethod.Post))
{
    @Html.Label("Blog Title")
    @Html.TextBoxFor(x => x.BlogTitle, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogTitle, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Image")
    @Html.TextBoxFor(x => x.BlogImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Blog Title")
    @Html.TextBoxFor(x => x.BlogThumbnailImage, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogThumbnailImage, "", new { @class = "text-danger" })
    <br />
    @Html.Label("Category")
    @Html.DropDownListFor(x => x.CategoryID, (List<SelectListItem>)ViewBag.cv, new { @class = "form-control" })
    <br />
    @Html.Label("Blog Content")
    @Html.TextAreaFor(x => x.BlogContent, 10, 3, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.BlogContent, "", new { @class = "text-danger" })
    <br />
    <button id="blogRegister" class="btn btn-success">Save</button>
}

